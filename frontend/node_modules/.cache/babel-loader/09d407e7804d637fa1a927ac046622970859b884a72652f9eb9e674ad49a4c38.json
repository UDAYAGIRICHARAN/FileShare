{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\new_folder1\\\\as\\\\frontend\\\\src\\\\components\\\\GoogleLoginButton.js\",\n  _s = $RefreshSig$();\n// src/components/GoogleLoginButton.js\nimport React, { useState, useContext } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { googleAuth } from '../api/authApi';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Button, Typography } from '@mui/material';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLoginButton = () => {\n  _s();\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    saveTokens\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleSuccess = async credentialResponse => {\n    try {\n      const {\n        credential\n      } = credentialResponse; // Google ID Token\n      const data = await googleAuth(credential); // Exchange it with your backend for JWT\n      saveTokens(data.access, data.refresh);\n      navigate('/'); // Redirect to home after successful login\n    } catch (error) {\n      if (error.response && error.response.data) {\n        setErrorMessage(error.response.data.error || 'Google login failed.');\n      } else {\n        setErrorMessage('Google login failed. Please try again later.');\n      }\n    }\n  };\n  const handleError = () => {\n    setErrorMessage('Google login was not successful. Please try again.');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2,\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleSuccess,\n      onError: handleError,\n      render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n        onClick: renderProps.onClick,\n        disabled: renderProps.disabled,\n        variant: \"outlined\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(GoogleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this),\n        fullWidth: true,\n        sx: {\n          textTransform: 'none',\n          fontSize: '16px',\n          py: 1.5,\n          borderColor: 'rgba(0, 0, 0, 0.3)',\n          '&:hover': {\n            borderColor: 'rgba(0, 0, 0, 0.6)'\n          }\n        },\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      variant: \"body2\",\n      sx: {\n        mt: 1\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLoginButton, \"TxzNSqv+TIfHlhSdBvqAegaqGu0=\", false, function () {\n  return [useNavigate];\n});\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["React","useState","useContext","GoogleLogin","AuthContext","googleAuth","useNavigate","Box","Button","Typography","GoogleIcon","jsxDEV","_jsxDEV","GoogleLoginButton","_s","errorMessage","setErrorMessage","saveTokens","navigate","handleSuccess","credentialResponse","credential","data","access","refresh","error","response","handleError","sx","mt","textAlign","children","onSuccess","onError","render","renderProps","onClick","disabled","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","textTransform","fontSize","py","borderColor","_c","$RefreshReg$"],"sources":["D:/Projects/new_folder1/as/frontend/src/components/GoogleLoginButton.js"],"sourcesContent":["// src/components/GoogleLoginButton.js\r\nimport React, { useState, useContext } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { googleAuth } from '../api/authApi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box, Button, Typography } from '@mui/material';\r\nimport GoogleIcon from '@mui/icons-material/Google';\r\n\r\nconst GoogleLoginButton = () => {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const { saveTokens } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSuccess = async (credentialResponse) => {\r\n    try {\r\n      const { credential } = credentialResponse; // Google ID Token\r\n      const data = await googleAuth(credential); // Exchange it with your backend for JWT\r\n      saveTokens(data.access, data.refresh);\r\n      navigate('/'); // Redirect to home after successful login\r\n    } catch (error) {\r\n      if (error.response && error.response.data) {\r\n        setErrorMessage(error.response.data.error || 'Google login failed.');\r\n      } else {\r\n        setErrorMessage('Google login failed. Please try again later.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = () => {\r\n    setErrorMessage('Google login was not successful. Please try again.');\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n      <GoogleLogin\r\n        onSuccess={handleSuccess}\r\n        onError={handleError}\r\n        render={(renderProps) => (\r\n          <Button\r\n            onClick={renderProps.onClick}\r\n            disabled={renderProps.disabled}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<GoogleIcon />}\r\n            fullWidth\r\n            sx={{\r\n              textTransform: 'none',\r\n              fontSize: '16px',\r\n              py: 1.5,\r\n              borderColor: 'rgba(0, 0, 0, 0.3)',\r\n              '&:hover': { borderColor: 'rgba(0, 0, 0, 0.6)' },\r\n            }}\r\n          >\r\n            Sign in with Google\r\n          </Button>\r\n        )}\r\n      />\r\n      {errorMessage && (\r\n        <Typography color=\"error\" variant=\"body2\" sx={{ mt: 1 }}>\r\n          {errorMessage}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GoogleLoginButton;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}