{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\new_folder1\\\\as\\\\frontend\\\\src\\\\pages\\\\UploadedFilesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Alert, CircularProgress } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../api/axiosInstance';\nimport CryptoJS from 'crypto-js';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadedFilesPage = () => {\n  _s();\n  const [files, setFiles] = useState([]); // List of uploaded files\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(''); // Error message state\n  const navigate = useNavigate(); // For navigation\n\n  useEffect(() => {\n    const fetchUploadedFiles = async () => {\n      try {\n        const response = await axiosInstance.get('/api/all-files/');\n        setFiles(response.data.files || []);\n      } catch (err) {\n        setError('Failed to fetch uploaded files.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUploadedFiles();\n  }, []);\n  const handleDownload = async fileId => {\n    try {\n      // Fetch encrypted content, key, and IV from the server\n      const response = await axiosInstance.get(`/api/access/${fileId}/`);\n      const {\n        encrypted_content,\n        key,\n        iv,\n        file_name\n      } = response.data;\n\n      // Decrypt the content using AES\n      const decryptedContent = CryptoJS.AES.decrypt({\n        ciphertext: CryptoJS.enc.Hex.parse(encrypted_content)\n      }, CryptoJS.enc.Hex.parse(key), {\n        iv: CryptoJS.enc.Hex.parse(iv),\n        mode: CryptoJS.mode.CFB,\n        padding: CryptoJS.pad.Pkcs7\n      }).toString(CryptoJS.enc.Utf8);\n\n      // Create a Blob and download the file\n      const blob = new Blob([decryptedContent], {\n        type: 'application/octet-stream'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', file_name);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error('Download error:', err);\n      alert('Failed to download the file.');\n    }\n  };\n  const handleViewSharedWith = fileId => {\n    navigate(`/shared-with/${fileId}`); // Redirect to SharedWithPage with fileId\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Uploaded Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"File Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Uploaded At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: files.map(file => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.file_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(file.uploaded_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => handleDownload(file.id),\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  sx: {\n                    ml: 2\n                  },\n                  onClick: () => handleViewSharedWith(file.id),\n                  children: \"Shared With\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)]\n            }, file.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UploadedFilesPage, \"QgN53zxqzZGioGL9SKK6M2QakfQ=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadedFilesPage;\nexport default UploadedFilesPage;\nvar _c;\n$RefreshReg$(_c, \"UploadedFilesPage\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Alert","CircularProgress","useNavigate","axiosInstance","CryptoJS","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadedFilesPage","_s","files","setFiles","loading","setLoading","error","setError","navigate","fetchUploadedFiles","response","get","data","err","handleDownload","fileId","encrypted_content","key","iv","file_name","decryptedContent","AES","decrypt","ciphertext","enc","Hex","parse","mode","CFB","padding","pad","Pkcs7","toString","Utf8","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","console","alert","handleViewSharedWith","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","variant","gutterBottom","severity","component","map","file","Date","uploaded_at","toLocaleString","color","onClick","id","ml","_c","$RefreshReg$"],"sources":["D:/Projects/new_folder1/as/frontend/src/pages/UploadedFilesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Alert,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axiosInstance from '../api/axiosInstance';\r\nimport CryptoJS from 'crypto-js';\r\nimport Header from '../components/Header';\r\n\r\nconst UploadedFilesPage = () => {\r\n  const [files, setFiles] = useState([]); // List of uploaded files\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const [error, setError] = useState(''); // Error message state\r\n  const navigate = useNavigate(); // For navigation\r\n\r\n  useEffect(() => {\r\n    const fetchUploadedFiles = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/api/all-files/');\r\n        setFiles(response.data.files || []);\r\n      } catch (err) {\r\n        setError('Failed to fetch uploaded files.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchUploadedFiles();\r\n  }, []);\r\n\r\n  const handleDownload = async (fileId) => {\r\n    try {\r\n      // Fetch encrypted content, key, and IV from the server\r\n      const response = await axiosInstance.get(`/api/access/${fileId}/`);\r\n      const { encrypted_content, key, iv, file_name } = response.data;\r\n\r\n      // Decrypt the content using AES\r\n      const decryptedContent = CryptoJS.AES.decrypt(\r\n        { ciphertext: CryptoJS.enc.Hex.parse(encrypted_content) },\r\n        CryptoJS.enc.Hex.parse(key),\r\n        {\r\n          iv: CryptoJS.enc.Hex.parse(iv),\r\n          mode: CryptoJS.mode.CFB,\r\n          padding: CryptoJS.pad.Pkcs7,\r\n        }\r\n      ).toString(CryptoJS.enc.Utf8);\r\n\r\n      // Create a Blob and download the file\r\n      const blob = new Blob([decryptedContent], { type: 'application/octet-stream' });\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', file_name);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (err) {\r\n      console.error('Download error:', err);\r\n      alert('Failed to download the file.');\r\n    }\r\n  };\r\n\r\n  const handleViewSharedWith = (fileId) => {\r\n    navigate(`/shared-with/${fileId}`); // Redirect to SharedWithPage with fileId\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container maxWidth=\"md\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Uploaded Files\r\n        </Typography>\r\n\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : error ? (\r\n          <Alert severity=\"error\">{error}</Alert>\r\n        ) : (\r\n          <TableContainer component={Paper} sx={{ mt: 4 }}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>File Name</TableCell>\r\n                  <TableCell>Uploaded At</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {files.map((file) => (\r\n                  <TableRow key={file.id}>\r\n                    <TableCell>{file.file_name}</TableCell>\r\n                    <TableCell>{new Date(file.uploaded_at).toLocaleString()}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleDownload(file.id)}\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        sx={{ ml: 2 }}\r\n                        onClick={() => handleViewSharedWith(file.id)}\r\n                      >\r\n                        Shared With\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadedFilesPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,MAAM,EACNC,KAAK,EACLC,gBAAgB,QACX,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM6B,QAAQ,GAAGhB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhCd,SAAS,CAAC,MAAM;IACd,MAAM+B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,aAAa,CAACkB,GAAG,CAAC,iBAAiB,CAAC;QAC3DR,QAAQ,CAACO,QAAQ,CAACE,IAAI,CAACV,KAAK,IAAI,EAAE,CAAC;MACrC,CAAC,CAAC,OAAOW,GAAG,EAAE;QACZN,QAAQ,CAAC,iCAAiC,CAAC;MAC7C,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDI,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAG,MAAOC,MAAM,IAAK;IACvC,IAAI;MACF;MACA,MAAML,QAAQ,GAAG,MAAMjB,aAAa,CAACkB,GAAG,CAAC,eAAeI,MAAM,GAAG,CAAC;MAClE,MAAM;QAAEC,iBAAiB;QAAEC,GAAG;QAAEC,EAAE;QAAEC;MAAU,CAAC,GAAGT,QAAQ,CAACE,IAAI;;MAE/D;MACA,MAAMQ,gBAAgB,GAAG1B,QAAQ,CAAC2B,GAAG,CAACC,OAAO,CAC3C;QAAEC,UAAU,EAAE7B,QAAQ,CAAC8B,GAAG,CAACC,GAAG,CAACC,KAAK,CAACV,iBAAiB;MAAE,CAAC,EACzDtB,QAAQ,CAAC8B,GAAG,CAACC,GAAG,CAACC,KAAK,CAACT,GAAG,CAAC,EAC3B;QACEC,EAAE,EAAExB,QAAQ,CAAC8B,GAAG,CAACC,GAAG,CAACC,KAAK,CAACR,EAAE,CAAC;QAC9BS,IAAI,EAAEjC,QAAQ,CAACiC,IAAI,CAACC,GAAG;QACvBC,OAAO,EAAEnC,QAAQ,CAACoC,GAAG,CAACC;MACxB,CACF,CAAC,CAACC,QAAQ,CAACtC,QAAQ,CAAC8B,GAAG,CAACS,IAAI,CAAC;;MAE7B;MACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACf,gBAAgB,CAAC,EAAE;QAAEgB,IAAI,EAAE;MAA2B,CAAC,CAAC;MAC/E,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;MAC5C,MAAMO,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGP,GAAG;MACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE1B,SAAS,CAAC;MACxCuB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;IACjC,CAAC,CAAC,OAAO5B,GAAG,EAAE;MACZqC,OAAO,CAAC5C,KAAK,CAAC,iBAAiB,EAAEO,GAAG,CAAC;MACrCsC,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAIrC,MAAM,IAAK;IACvCP,QAAQ,CAAC,gBAAgBO,MAAM,EAAE,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,oBACElB,OAAA,CAAAE,SAAA;IAAAsD,QAAA,gBACExD,OAAA,CAACF,MAAM;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5D,OAAA,CAACjB,SAAS;MAAC8E,QAAQ,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAG,CAAE;MAAAP,QAAA,gBACtCxD,OAAA,CAAChB,UAAU;QAACgF,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAT,QAAA,EAAC;MAEtC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAEZrD,OAAO,gBACNP,OAAA,CAACN,gBAAgB;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAClBnD,KAAK,gBACPT,OAAA,CAACP,KAAK;QAACyE,QAAQ,EAAC,OAAO;QAAAV,QAAA,EAAE/C;MAAK;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAEvC5D,OAAA,CAACZ,cAAc;QAAC+E,SAAS,EAAE5E,KAAM;QAACuE,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAP,QAAA,eAC9CxD,OAAA,CAACf,KAAK;UAAAuE,QAAA,gBACJxD,OAAA,CAACX,SAAS;YAAAmE,QAAA,eACRxD,OAAA,CAACV,QAAQ;cAAAkE,QAAA,gBACPxD,OAAA,CAACb,SAAS;gBAAAqE,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAChC5D,OAAA,CAACb,SAAS;gBAAAqE,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAClC5D,OAAA,CAACb,SAAS;gBAAAqE,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZ5D,OAAA,CAACd,SAAS;YAAAsE,QAAA,EACPnD,KAAK,CAAC+D,GAAG,CAAEC,IAAI,iBACdrE,OAAA,CAACV,QAAQ;cAAAkE,QAAA,gBACPxD,OAAA,CAACb,SAAS;gBAAAqE,QAAA,EAAEa,IAAI,CAAC/C;cAAS;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACvC5D,OAAA,CAACb,SAAS;gBAAAqE,QAAA,EAAE,IAAIc,IAAI,CAACD,IAAI,CAACE,WAAW,CAAC,CAACC,cAAc,CAAC;cAAC;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACpE5D,OAAA,CAACb,SAAS;gBAAAqE,QAAA,gBACRxD,OAAA,CAACR,MAAM;kBACLwE,OAAO,EAAC,WAAW;kBACnBS,KAAK,EAAC,SAAS;kBACfC,OAAO,EAAEA,CAAA,KAAMzD,cAAc,CAACoD,IAAI,CAACM,EAAE,CAAE;kBAAAnB,QAAA,EACxC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACT5D,OAAA,CAACR,MAAM;kBACLwE,OAAO,EAAC,UAAU;kBAClBS,KAAK,EAAC,WAAW;kBACjBX,EAAE,EAAE;oBAAEc,EAAE,EAAE;kBAAE,CAAE;kBACdF,OAAO,EAAEA,CAAA,KAAMnB,oBAAoB,CAACc,IAAI,CAACM,EAAE,CAAE;kBAAAnB,QAAA,EAC9C;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC;YAAA,GAnBCS,IAAI,CAACM,EAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoBZ,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CACjB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAACxD,EAAA,CA7GID,iBAAiB;EAAA,QAIJR,WAAW;AAAA;AAAAkF,EAAA,GAJxB1E,iBAAiB;AA+GvB,eAAeA,iBAAiB;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}