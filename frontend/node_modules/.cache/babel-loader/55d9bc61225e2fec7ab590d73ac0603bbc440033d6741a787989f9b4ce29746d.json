{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\new_folder1\\\\as\\\\frontend\\\\src\\\\pages\\\\AccessFilesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Alert, CircularProgress } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../api/axiosInstance';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccessFilesPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAccessFiles = async () => {\n      try {\n        const response = await axiosInstance.get('/api/current-access-files/');\n        console.log('Fetched files:', response.data.files); // Debugging: Check response data\n        setFiles(response.data.files || []);\n      } catch (err) {\n        console.error('Error fetching files:', err); // Debugging\n        setError('Failed to fetch accessible files.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAccessFiles();\n  }, []);\n  const handleDownload = async (encryptedFileId, fileName) => {\n    try {\n      console.log(`Downloading file with ID: ${encryptedFileId}`); // Debugging\n      const response = await axiosInstance.get(`/api/access-shared-file/${encryptedFileId}/`, {\n        responseType: 'blob' // Ensure response is treated as a binary blob\n      });\n      const blob = new Blob([response.data], {\n        type: 'application/pdf'\n      }); // Adjust MIME type for PDFs\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', fileName || 'downloaded_file.pdf');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error('Error downloading file:', err); // Debugging\n      alert('Failed to download file. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Accessible Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Shared By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: files.map(file => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.file_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.shared_by\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.download_permission && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => handleDownload(file.encrypted_file_id, file.file_name),\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, file.encrypted_file_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AccessFilesPage, \"QgN53zxqzZGioGL9SKK6M2QakfQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AccessFilesPage;\nexport default AccessFilesPage;\nvar _c;\n$RefreshReg$(_c, \"AccessFilesPage\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Alert","CircularProgress","useNavigate","axiosInstance","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","AccessFilesPage","_s","files","setFiles","loading","setLoading","error","setError","navigate","fetchAccessFiles","response","get","console","log","data","err","handleDownload","encryptedFileId","fileName","responseType","blob","Blob","type","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","alert","children","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","variant","gutterBottom","severity","component","map","file","file_name","shared_by","download_permission","color","onClick","encrypted_file_id","_c","$RefreshReg$"],"sources":["D:/Projects/new_folder1/as/frontend/src/pages/AccessFilesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  Alert,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axiosInstance from '../api/axiosInstance';\r\nimport Header from '../components/Header';\r\n\r\nconst AccessFilesPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchAccessFiles = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/api/current-access-files/');\r\n        console.log('Fetched files:', response.data.files); // Debugging: Check response data\r\n        setFiles(response.data.files || []);\r\n      } catch (err) {\r\n        console.error('Error fetching files:', err); // Debugging\r\n        setError('Failed to fetch accessible files.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAccessFiles();\r\n  }, []);\r\n\r\n  const handleDownload = async (encryptedFileId, fileName) => {\r\n    try {\r\n      console.log(`Downloading file with ID: ${encryptedFileId}`); // Debugging\r\n      const response = await axiosInstance.get(`/api/access-shared-file/${encryptedFileId}/`, {\r\n        responseType: 'blob', // Ensure response is treated as a binary blob\r\n      });\r\n\r\n      const blob = new Blob([response.data], { type: 'application/pdf' }); // Adjust MIME type for PDFs\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', fileName || 'downloaded_file.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (err) {\r\n      console.error('Error downloading file:', err); // Debugging\r\n      alert('Failed to download file. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container maxWidth=\"md\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Accessible Files\r\n        </Typography>\r\n\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : error ? (\r\n          <Alert severity=\"error\">{error}</Alert>\r\n        ) : (\r\n          <TableContainer component={Paper} sx={{ mt: 4 }}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>File</TableCell>\r\n                  <TableCell>Shared By</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {files.map((file) => (\r\n                  <TableRow key={file.encrypted_file_id}>\r\n                    <TableCell>{file.file_name}</TableCell>\r\n                    <TableCell>{file.shared_by}</TableCell>\r\n                    <TableCell>\r\n                      {file.download_permission && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() =>\r\n                            handleDownload(file.encrypted_file_id, file.file_name)\r\n                          }\r\n                        >\r\n                          Download\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccessFilesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}