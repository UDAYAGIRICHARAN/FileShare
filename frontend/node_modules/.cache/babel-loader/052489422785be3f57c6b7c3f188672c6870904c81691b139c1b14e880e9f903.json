{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\new_folder1\\\\as\\\\frontend\\\\src\\\\pages\\\\UploadedFilesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, TextField, Alert, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport axiosInstance from '../api/axiosInstance';\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UploadedFilesPage = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [sharedUsers, setSharedUsers] = useState([]);\n  const [openShareDialog, setOpenShareDialog] = useState(false);\n  const [openSharedWithDialog, setOpenSharedWithDialog] = useState(false);\n  const [selectedFileId, setSelectedFileId] = useState(null);\n  const [shareDetails, setShareDetails] = useState({\n    user_id: '',\n    view_permission: false,\n    download_permission: false,\n    expiration: 24\n  });\n  useEffect(() => {\n    const fetchUploadedFiles = async () => {\n      try {\n        const response = await axiosInstance.get('/api/all-files/');\n        setFiles(response.data.files || []);\n      } catch (err) {\n        console.error('Error fetching files:', err); // Debugging\n        setError('Failed to fetch uploaded files.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUploadedFiles();\n  }, []);\n  const handleDownload = async (encryptedFileId, fileName) => {\n    if (!encryptedFileId) {\n      alert('Invalid file ID. Unable to download.');\n      return;\n    }\n    try {\n      console.log(`Downloading file with encrypted ID: ${encryptedFileId}`); // Debugging\n      const response = await axiosInstance.get(`/api/access/${encryptedFileId}/`, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', fileName || 'file.encrypted');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error('Error downloading file:', err); // Debugging\n      alert('Failed to download file.');\n    }\n  };\n  const openShareDialogHandler = encryptedFileId => {\n    setSelectedFileId(encryptedFileId);\n    setOpenShareDialog(true);\n  };\n  const handleShareFile = async () => {\n    if (!selectedFileId) {\n      alert('Invalid file ID. Unable to share.');\n      return;\n    }\n    try {\n      const response = await axiosInstance.post(`/api/share/${selectedFileId}/`, shareDetails);\n      alert(response.data.message || 'File shared successfully.');\n      setOpenShareDialog(false);\n      setShareDetails({\n        user_id: '',\n        view_permission: false,\n        download_permission: false,\n        expiration: 24\n      });\n    } catch (err) {\n      console.error('Error sharing file:', err); // Debugging\n      alert('Failed to share file. Please try again.');\n    }\n  };\n  const handleViewSharedWith = async encryptedFileId => {\n    if (!encryptedFileId) {\n      alert('Invalid file ID. Unable to fetch shared users.');\n      return;\n    }\n    try {\n      setSelectedFileId(encryptedFileId);\n      const response = await axiosInstance.get(`/api/shared-with/${encryptedFileId}/`);\n      setSharedUsers(response.data.shared_users || []);\n      setOpenSharedWithDialog(true);\n    } catch (err) {\n      console.error('Error fetching shared users:', err); // Debugging\n      alert('Failed to fetch shared users.');\n    }\n  };\n  const handleRevokeAccess = async username => {\n    if (!selectedFileId || !username) {\n      alert('Invalid request. Unable to revoke access.');\n      return;\n    }\n    try {\n      await axiosInstance.post(`/api/revoke/${selectedFileId}/`, {\n        username\n      });\n      alert('Access revoked successfully.');\n      setSharedUsers(prev => prev.filter(user => user.username !== username));\n    } catch (err) {\n      console.error('Error revoking access:', err); // Debugging\n      alert('Failed to revoke access.');\n    }\n  };\n  const handleDialogClose = () => {\n    setOpenShareDialog(false);\n    setShareDetails({\n      user_id: '',\n      view_permission: false,\n      download_permission: false,\n      expiration: 24\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      sx: {\n        mt: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Uploaded Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"File Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Uploaded At\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: files.map(file => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: file.file_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: new Date(file.uploaded_at).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: () => handleDownload(file.encrypted_file_id, file.file_name),\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"secondary\",\n                  sx: {\n                    ml: 2\n                  },\n                  onClick: () => openShareDialogHandler(file.encrypted_file_id),\n                  children: \"Share\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"text\",\n                  color: \"info\",\n                  sx: {\n                    ml: 2\n                  },\n                  onClick: () => handleViewSharedWith(file.encrypted_file_id),\n                  children: \"Shared With\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)]\n            }, file.encrypted_file_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openShareDialog,\n        onClose: handleDialogClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Share File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"User ID\",\n            fullWidth: true,\n            value: shareDetails.user_id,\n            onChange: e => setShareDetails({\n              ...shareDetails,\n              user_id: e.target.value\n            }),\n            sx: {\n              mt: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Expiration (hours)\",\n            fullWidth: true,\n            type: \"number\",\n            value: shareDetails.expiration,\n            onChange: e => setShareDetails({\n              ...shareDetails,\n              expiration: e.target.value\n            }),\n            sx: {\n              mt: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDialogClose,\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleShareFile,\n            color: \"primary\",\n            children: \"Share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openSharedWithDialog,\n        onClose: () => setOpenSharedWithDialog(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Shared With\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: sharedUsers.length > 0 ? sharedUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              marginTop: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [user.username, \" (\", user.email || 'No email available', \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"error\",\n              variant: \"outlined\",\n              onClick: () => handleRevokeAccess(user.username),\n              children: \"Revoke Access\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, user.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No users have access to this file.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenSharedWithDialog(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UploadedFilesPage, \"1lfe01Xhm/4uaRmnETDAaaiTcUQ=\");\n_c = UploadedFilesPage;\nexport default UploadedFilesPage;\nvar _c;\n$RefreshReg$(_c, \"UploadedFilesPage\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","TextField","Alert","CircularProgress","Dialog","DialogTitle","DialogContent","DialogActions","axiosInstance","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadedFilesPage","_s","files","setFiles","loading","setLoading","error","setError","sharedUsers","setSharedUsers","openShareDialog","setOpenShareDialog","openSharedWithDialog","setOpenSharedWithDialog","selectedFileId","setSelectedFileId","shareDetails","setShareDetails","user_id","view_permission","download_permission","expiration","fetchUploadedFiles","response","get","data","err","console","handleDownload","encryptedFileId","fileName","alert","log","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","openShareDialogHandler","handleShareFile","post","message","handleViewSharedWith","shared_users","handleRevokeAccess","username","prev","filter","user","handleDialogClose","children","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","variant","gutterBottom","severity","component","map","file","file_name","Date","uploaded_at","toLocaleString","color","onClick","encrypted_file_id","ml","open","onClose","label","fullWidth","value","onChange","e","target","type","length","style","display","alignItems","justifyContent","marginTop","email","_c","$RefreshReg$"],"sources":["D:/Projects/new_folder1/as/frontend/src/pages/UploadedFilesPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  Alert,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport axiosInstance from '../api/axiosInstance';\r\nimport Header from '../components/Header';\r\n\r\nconst UploadedFilesPage = () => {\r\n  const [files, setFiles] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [sharedUsers, setSharedUsers] = useState([]);\r\n  const [openShareDialog, setOpenShareDialog] = useState(false);\r\n  const [openSharedWithDialog, setOpenSharedWithDialog] = useState(false);\r\n  const [selectedFileId, setSelectedFileId] = useState(null);\r\n  const [shareDetails, setShareDetails] = useState({\r\n    user_id: '',\r\n    view_permission: false,\r\n    download_permission: false,\r\n    expiration: 24,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchUploadedFiles = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/api/all-files/');\r\n        setFiles(response.data.files || []);\r\n      } catch (err) {\r\n        console.error('Error fetching files:', err); // Debugging\r\n        setError('Failed to fetch uploaded files.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchUploadedFiles();\r\n  }, []);\r\n\r\n  const handleDownload = async (encryptedFileId, fileName) => {\r\n    if (!encryptedFileId) {\r\n      alert('Invalid file ID. Unable to download.');\r\n      return;\r\n    }\r\n    try {\r\n      console.log(`Downloading file with encrypted ID: ${encryptedFileId}`); // Debugging\r\n      const response = await axiosInstance.get(`/api/access/${encryptedFileId}/`, {\r\n        responseType: 'blob',\r\n      });\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', fileName || 'file.encrypted');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (err) {\r\n      console.error('Error downloading file:', err); // Debugging\r\n      alert('Failed to download file.');\r\n    }\r\n  };\r\n\r\n  const openShareDialogHandler = (encryptedFileId) => {\r\n    setSelectedFileId(encryptedFileId);\r\n    setOpenShareDialog(true);\r\n  };\r\n\r\n  const handleShareFile = async () => {\r\n    if (!selectedFileId) {\r\n      alert('Invalid file ID. Unable to share.');\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axiosInstance.post(`/api/share/${selectedFileId}/`, shareDetails);\r\n      alert(response.data.message || 'File shared successfully.');\r\n      setOpenShareDialog(false);\r\n      setShareDetails({\r\n        user_id: '',\r\n        view_permission: false,\r\n        download_permission: false,\r\n        expiration: 24,\r\n      });\r\n    } catch (err) {\r\n      console.error('Error sharing file:', err); // Debugging\r\n      alert('Failed to share file. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleViewSharedWith = async (encryptedFileId) => {\r\n    if (!encryptedFileId) {\r\n      alert('Invalid file ID. Unable to fetch shared users.');\r\n      return;\r\n    }\r\n    try {\r\n      setSelectedFileId(encryptedFileId);\r\n      const response = await axiosInstance.get(`/api/shared-with/${encryptedFileId}/`);\r\n      setSharedUsers(response.data.shared_users || []);\r\n      setOpenSharedWithDialog(true);\r\n    } catch (err) {\r\n      console.error('Error fetching shared users:', err); // Debugging\r\n      alert('Failed to fetch shared users.');\r\n    }\r\n  };\r\n\r\n  const handleRevokeAccess = async (username) => {\r\n    if (!selectedFileId || !username) {\r\n      alert('Invalid request. Unable to revoke access.');\r\n      return;\r\n    }\r\n    try {\r\n      await axiosInstance.post(`/api/revoke/${selectedFileId}/`, { username });\r\n      alert('Access revoked successfully.');\r\n      setSharedUsers((prev) => prev.filter((user) => user.username !== username));\r\n    } catch (err) {\r\n      console.error('Error revoking access:', err); // Debugging\r\n      alert('Failed to revoke access.');\r\n    }\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpenShareDialog(false);\r\n    setShareDetails({\r\n      user_id: '',\r\n      view_permission: false,\r\n      download_permission: false,\r\n      expiration: 24,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container maxWidth=\"md\" sx={{ mt: 10 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Uploaded Files\r\n        </Typography>\r\n\r\n        {loading ? (\r\n          <CircularProgress />\r\n        ) : error ? (\r\n          <Alert severity=\"error\">{error}</Alert>\r\n        ) : (\r\n          <TableContainer component={Paper} sx={{ mt: 4 }}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>File Name</TableCell>\r\n                  <TableCell>Uploaded At</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {files.map((file) => (\r\n                  <TableRow key={file.encrypted_file_id}>\r\n                    <TableCell>{file.file_name}</TableCell>\r\n                    <TableCell>{new Date(file.uploaded_at).toLocaleString()}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleDownload(file.encrypted_file_id, file.file_name)}\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"secondary\"\r\n                        sx={{ ml: 2 }}\r\n                        onClick={() => openShareDialogHandler(file.encrypted_file_id)}\r\n                      >\r\n                        Share\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"text\"\r\n                        color=\"info\"\r\n                        sx={{ ml: 2 }}\r\n                        onClick={() => handleViewSharedWith(file.encrypted_file_id)}\r\n                      >\r\n                        Shared With\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n\r\n        {/* Share File Dialog */}\r\n        <Dialog open={openShareDialog} onClose={handleDialogClose}>\r\n          <DialogTitle>Share File</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              label=\"User ID\"\r\n              fullWidth\r\n              value={shareDetails.user_id}\r\n              onChange={(e) => setShareDetails({ ...shareDetails, user_id: e.target.value })}\r\n              sx={{ mt: 2 }}\r\n            />\r\n            <TextField\r\n              label=\"Expiration (hours)\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={shareDetails.expiration}\r\n              onChange={(e) => setShareDetails({ ...shareDetails, expiration: e.target.value })}\r\n              sx={{ mt: 2 }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDialogClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleShareFile} color=\"primary\">\r\n              Share\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        {/* Shared With Dialog */}\r\n        <Dialog open={openSharedWithDialog} onClose={() => setOpenSharedWithDialog(false)}>\r\n          <DialogTitle>Shared With</DialogTitle>\r\n          <DialogContent>\r\n            {sharedUsers.length > 0 ? (\r\n              sharedUsers.map((user) => (\r\n                <div\r\n                  key={user.username}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'space-between',\r\n                    marginTop: 16,\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    {user.username} ({user.email || 'No email available'})\r\n                  </Typography>\r\n                  <Button\r\n                    color=\"error\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => handleRevokeAccess(user.username)}\r\n                  >\r\n                    Revoke Access\r\n                  </Button>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <Typography>No users have access to this file.</Typography>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenSharedWithDialog(false)}>Close</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadedFilesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}