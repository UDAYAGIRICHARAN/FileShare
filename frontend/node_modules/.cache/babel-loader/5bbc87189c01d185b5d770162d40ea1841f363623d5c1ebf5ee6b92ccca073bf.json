{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\new_folder1\\\\as\\\\frontend\\\\src\\\\pages\\\\ViewFilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Typography, CircularProgress, Alert } from '@mui/material';\nimport axiosInstance from '../api/axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewFilePage = () => {\n  _s();\n  const {\n    encryptedFileId\n  } = useParams();\n  const [content, setContent] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchFileContent = async () => {\n      try {\n        const response = await axiosInstance.get(`/api/view/${encryptedFileId}/`);\n        const {\n          encrypted_content,\n          aes_key,\n          aes_iv\n        } = response.data;\n\n        // Decode Base64 data\n        const encryptedContentBytes = base64ToArrayBuffer(encrypted_content);\n        const aesKeyBytes = base64ToArrayBuffer(aes_key);\n        const aesIvBytes = base64ToArrayBuffer(aes_iv);\n\n        // Import the AES key\n        const cryptoKey = await window.crypto.subtle.importKey('raw', aesKeyBytes, 'AES-CBC', false, ['decrypt']);\n\n        // Decrypt the content\n        const decryptedContent = await window.crypto.subtle.decrypt({\n          name: 'AES-CBC',\n          iv: aesIvBytes\n        }, cryptoKey, encryptedContentBytes);\n\n        // Convert ArrayBuffer to string\n        const decoder = new TextDecoder('utf-8');\n        const fileContent = decoder.decode(decryptedContent);\n        setContent(fileContent);\n      } catch (err) {\n        setError('Failed to load file content.');\n        console.error('Error fetching or decrypting file content:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFileContent();\n  }, [encryptedFileId]);\n  function base64ToArrayBuffer(base64) {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 10\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        whiteSpace: 'pre-wrap'\n      },\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewFilePage, \"B8JdL06SmZVYQoVZDN699Fp2BKw=\", false, function () {\n  return [useParams];\n});\n_c = ViewFilePage;\nexport default ViewFilePage;\nvar _c;\n$RefreshReg$(_c, \"ViewFilePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Container","Typography","CircularProgress","Alert","axiosInstance","jsxDEV","_jsxDEV","ViewFilePage","_s","encryptedFileId","content","setContent","loading","setLoading","error","setError","fetchFileContent","response","get","encrypted_content","aes_key","aes_iv","data","encryptedContentBytes","base64ToArrayBuffer","aesKeyBytes","aesIvBytes","cryptoKey","window","crypto","subtle","importKey","decryptedContent","decrypt","name","iv","decoder","TextDecoder","fileContent","decode","err","console","base64","binaryString","atob","len","length","bytes","Uint8Array","i","charCodeAt","buffer","maxWidth","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","variant","whiteSpace","_c","$RefreshReg$"],"sources":["D:/Projects/new_folder1/as/frontend/src/pages/ViewFilePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Container, Typography, CircularProgress, Alert } from '@mui/material';\r\nimport axiosInstance from '../api/axiosInstance';\r\n\r\nconst ViewFilePage = () => {\r\n  const { encryptedFileId } = useParams();\r\n  const [content, setContent] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchFileContent = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(`/api/view/${encryptedFileId}/`);\r\n        const { encrypted_content, aes_key, aes_iv } = response.data;\r\n\r\n        // Decode Base64 data\r\n        const encryptedContentBytes = base64ToArrayBuffer(encrypted_content);\r\n        const aesKeyBytes = base64ToArrayBuffer(aes_key);\r\n        const aesIvBytes = base64ToArrayBuffer(aes_iv);\r\n\r\n        // Import the AES key\r\n        const cryptoKey = await window.crypto.subtle.importKey(\r\n          'raw',\r\n          aesKeyBytes,\r\n          'AES-CBC',\r\n          false,\r\n          ['decrypt']\r\n        );\r\n\r\n        // Decrypt the content\r\n        const decryptedContent = await window.crypto.subtle.decrypt(\r\n          {\r\n            name: 'AES-CBC',\r\n            iv: aesIvBytes,\r\n          },\r\n          cryptoKey,\r\n          encryptedContentBytes\r\n        );\r\n\r\n        // Convert ArrayBuffer to string\r\n        const decoder = new TextDecoder('utf-8');\r\n        const fileContent = decoder.decode(decryptedContent);\r\n\r\n        setContent(fileContent);\r\n      } catch (err) {\r\n        setError('Failed to load file content.');\r\n        console.error('Error fetching or decrypting file content:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFileContent();\r\n  }, [encryptedFileId]);\r\n\r\n  function base64ToArrayBuffer(base64) {\r\n    const binaryString = window.atob(base64);\r\n    const len = binaryString.length;\r\n    const bytes = new Uint8Array(len);\r\n    for (let i = 0; i < len; i++) {\r\n      bytes[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ mt: 10 }}>\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : error ? (\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      ) : (\r\n        <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-wrap' }}>\r\n          {content}\r\n        </Typography>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ViewFilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}